<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- 定义圆角按钮的静态样式 -->
    <Style x:Key="RoundCornerButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Color="#04D3F2" Offset="0.6" />
                    <GradientStop Color="#FFAB0D" Offset="2.8" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <!--设置模板样式-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!--使用 Border 元素作为按钮的主要容器。  
                            roundedRectangle：名称，方便在触发器中引用。
                            Background：绑定背景色到按钮的 Background 属性。
                            BorderBrush：绑定边框颜色到按钮的 BorderBrush 属性。
                            BorderThickness：绑定边框宽度到按钮的 BorderThickness 属性。
                            CornerRadius：设置边框的圆角半径为10，使按钮具有圆角效果。
                            ContentPresenter：用于显示按钮的内容（如文本或图标）。
                    -->
                    <Border x:Name="roundedRectangle" 
                            CornerRadius="10"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <!-- 设置顶部圆角 -->
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- 鼠标悬停时 -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="roundedRectangle" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="#FFB3B3" Offset="0.4" />
                                        <GradientStop Color="#D68B8B" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- 按钮被按下时 -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="roundedRectangle" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="#D68B8B" Offset="0.4" />
                                        <GradientStop Color="#A05252" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 定义带图标的按钮的静态样式 -->
    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="5"/>
        <!-- 调整高度以适应图标和文本 -->
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="5 5 5 5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FFFFFF"/>
        <!--设置背景颜色-->
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <!-- 淡色 -->
                    <GradientStop Color="#AAAAAA" Offset="0.7" />
                    <GradientStop Color="#666666" Offset="0.3" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="roundedRectangle" 
                            CornerRadius="10"
                            Background="#FFFFFF"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <!-- 使用 StackPanel 来布局图标和文本 -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- 鼠标悬停时 -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="roundedRectangle" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="#4477BB" Offset="0.4" />
                                        <GradientStop Color="#5599BB" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- 按钮被按下时 -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="roundedRectangle" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="#6655BB" Offset="0.4" />
                                        <GradientStop Color="#6699BB" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>